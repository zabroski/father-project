{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/father-project/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\n// import { Fragment } from 'react';\n// import { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\n// import HighlightedQuote from '../components/quotes/HighlightedQuote';\n// import Comments from '../components/comments/Comments';\n// const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\n//   { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\n// ];\n// let a = 4\n// const QuoteDetail = () => {\n//   const match = useRouteMatch();\n//   const params = useParams();\n//   const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n//   if (!quote) {\n//     return <p>No quote found!</p>;\n//   }\n//   console.log(++a)\n//   return (\n//     <Fragment>\n//       <HighlightedQuote text={quote.text} author={quote.author} />\n//       <Route path={match.path} exact>\n//         <div className='centered'>\n//           <Link className='btn--flat' to={`${match.url}/comments`}>\n//             Load Comments\n//           </Link>\n//         </div>\n//       </Route>\n//       <Route path={`${match.path}/comments`}>\n//         <Comments />\n//       </Route>\n//     </Fragment>\n//   );\n// };\n// export default QuoteDetail;\nimport { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"9oA6TaFDNtyzXPIyN8bTJvanQSo=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/father-project/src/pages/QuoteDetail.js"],"names":["Fragment","useEffect","useParams","Route","Link","useRouteMatch","HighlightedQuote","Comments","useHttp","getSingleQuote","LoadingSpinner","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path","url"],"mappings":";;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AAEA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGP,aAAa,EAA3B;AACA,QAAMQ,MAAM,GAAGX,SAAS,EAAxB;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAcD,MAApB;AAEA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAoDX,OAAO,CAC/DC,cAD+D,EAE/D,IAF+D,CAAjE;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;AAIA,MAAIE,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACD,WAAW,CAACE,IAAjB,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF,WAAW,CAACE,IAApC;AAA0C,MAAA,MAAM,EAAEF,WAAW,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,KAAK,CAACU,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9CD;;GAAMX,W;UACUN,a,EACCH,S,EAI2CM,O;;;KANtDG,W;AAgDN,eAAeA,WAAf","sourcesContent":["// import { Fragment } from 'react';\n// import { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\n\n// import HighlightedQuote from '../components/quotes/HighlightedQuote';\n// import Comments from '../components/comments/Comments';\n\n// const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\n//   { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\n// ];\n// let a = 4\n\n// const QuoteDetail = () => {\n//   const match = useRouteMatch();\n//   const params = useParams();\n\n//   const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n//   if (!quote) {\n//     return <p>No quote found!</p>;\n//   }\n\n\n//   console.log(++a)\n\n//   return (\n//     <Fragment>\n//       <HighlightedQuote text={quote.text} author={quote.author} />\n//       <Route path={match.path} exact>\n//         <div className='centered'>\n//           <Link className='btn--flat' to={`${match.url}/comments`}>\n//             Load Comments\n//           </Link>\n//         </div>\n//       </Route>\n//       <Route path={`${match.path}/comments`}>\n//         <Comments />\n//       </Route>\n//     </Fragment>\n//   );\n// };\n\n// export default QuoteDetail;\n\n\n\nimport { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className='centered'>\n          <Link className='btn--flat' to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}