{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/father-project/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api'; // const  DUMMY_QUOTES = [\n//     {id: 'q1', author: 'Raye', text: \"I am a cute baby!\" },\n//     {id: 'q2', author: 'Grady', text: \"Learning from home with dad and Raye!\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focus\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/father-project/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getAllQuotes","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B,C,CAEA;AACA;AACA;AAEA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDP,OAAO,CAC5DC,YAD4D,EAC9C,IAD8C,CAAhE;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW;AAEd,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;;AAKA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB;AAAA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAIH;;AACD,MAAIG,KAAJ,EAAY;AACR,wBAAO;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA,gBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAGH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAH,EAA4E;AACxE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAzBD;;GAAMJ,S;UACuDF,O;;;KADvDE,S;AA0BN,eAAeA,SAAf","sourcesContent":["import { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\n// const  DUMMY_QUOTES = [\n//     {id: 'q1', author: 'Raye', text: \"I am a cute baby!\" },\n//     {id: 'q2', author: 'Grady', text: \"Learning from home with dad and Raye!\" },\n\n// ];\n\nconst AllQuotes = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(\n        getAllQuotes, true\n    );\n    useEffect(() => {\n        sendRequest();\n\n    }, [sendRequest]);\n\n    if (status === 'pending') {\n        <div className='centered'>\n            <LoadingSpinner />\n        </div>\n\n    }\n    if (error ) {\n        return <p className='centered focus'>{error}</p>\n    }\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0 )) {\n        return <NoQuotesFound />\n    }\n\n    return (\n        <QuoteList quotes={loadedQuotes} />\n    )\n}\nexport default AllQuotes;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}