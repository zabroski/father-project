{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/father-project/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { Route, useParams } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Raye',\n  text: \"I am a cute baby!\"\n}, {\n  id: 'q2',\n  author: 'Grady',\n  text: \"Learning from home with dad and Raye!\"\n}];\n\nconst QuotesDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuotesDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuotesDetail;\nexport default QuotesDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesDetail\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/father-project/src/pages/QuoteDetail.js"],"names":["Fragment","Route","useParams","HighlightedQuote","Comments","DUMMY_QUOTES","id","author","text","QuotesDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,kBAAjC;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AAEA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAOC,YAAY,GAAG,CAClB;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,MAAnB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADkB,EAElB;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,OAAnB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAFkB,CAAtB;;AAMA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAMS,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAA/C,CAAd;;AAEA,MAAG,CAACF,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUG,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlBD;;GAAMJ,Y;UACaP,S;;;KADbO,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import { Fragment } from 'react';\nimport { Route, useParams } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\n\nimport Comments from '../components/comments/Comments';\n\nconst  DUMMY_QUOTES = [\n    {id: 'q1', author: 'Raye', text: \"I am a cute baby!\" },\n    {id: 'q2', author: 'Grady', text: \"Learning from home with dad and Raye!\" },\n\n];\n\nconst QuotesDetail = () => {\n    const params = useParams();\n\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n    if(!quote) {\n        return <p>No Quote found!</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author}/>\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n\n}\nexport default QuotesDetail;"]},"metadata":{},"sourceType":"module"}