{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/father-project/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\n// import { useEffect } from 'react';\n// import QuoteList from '../components/quotes/QuoteList';\n// import LoadingSpinner from '../components/UI/LoadingSpinner';\n// import NoQuotesFound from '../components/quotes/NoQuotesFound';\n// import useHttp from '../hooks/use-http';\n// import { getAllQuotes } from '../lib/api';\n// const  DUMMY_QUOTES = [\n//     {id: 'q1', author: 'Raye', text: \"I am a cute baby!\" },\n//     {id: 'q2', author: 'Grady', text: \"Learning from home with dad and Raye!\" },\n// ];\n// const AllQuotes = () => {\n//     const {sendRequest, status, data: loadedQuotes, error} = useHttp(\n//         getAllQuotes, true\n//     );\n//     useEffect(() => {\n//         sendRequest();\n//     }, [sendRequest]);\n//     if (status === 'pending') {\n//         <div className='centered'>\n//             <LoadingSpinner />\n//         </div>\n//     }\n//     if (error ) {\n//         return <p className='centered focus'>{error}</p>\n//     }\n//     if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0 )) {\n//         return <NoQuotesFound />\n//     }\n//     return (\n//         <QuoteList quotes={loadedQuotes} />\n//     )\n// }\n// export default AllQuotes;\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"TX91E3Ry29pOjGA3Az87eReX9Xs=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/father-project/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getAllQuotes","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,YAA7B;AAA2CC,IAAAA;AAA3C,MAAqDP,OAAO,CAChEC,YADgE,EAEhE,IAFgE,CAAlE;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAJ,EAA4E;AAC1E,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMJ,S;UACuDF,O;;;KADvDE,S;AA6BN,eAAeA,SAAf","sourcesContent":["// import { useEffect } from 'react';\n\n// import QuoteList from '../components/quotes/QuoteList';\n// import LoadingSpinner from '../components/UI/LoadingSpinner';\n// import NoQuotesFound from '../components/quotes/NoQuotesFound';\n// import useHttp from '../hooks/use-http';\n// import { getAllQuotes } from '../lib/api';\n\n// const  DUMMY_QUOTES = [\n//     {id: 'q1', author: 'Raye', text: \"I am a cute baby!\" },\n//     {id: 'q2', author: 'Grady', text: \"Learning from home with dad and Raye!\" },\n\n// ];\n\n// const AllQuotes = () => {\n//     const {sendRequest, status, data: loadedQuotes, error} = useHttp(\n//         getAllQuotes, true\n//     );\n//     useEffect(() => {\n//         sendRequest();\n\n//     }, [sendRequest]);\n\n//     if (status === 'pending') {\n//         <div className='centered'>\n//             <LoadingSpinner />\n//         </div>\n\n//     }\n//     if (error ) {\n//         return <p className='centered focus'>{error}</p>\n//     }\n//     if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0 )) {\n//         return <NoQuotesFound />\n//     }\n\n//     return (\n//         <QuoteList quotes={loadedQuotes} />\n//     )\n// }\n// export default AllQuotes;\n\n\n\n\nimport { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\n    getAllQuotes,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>;\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}