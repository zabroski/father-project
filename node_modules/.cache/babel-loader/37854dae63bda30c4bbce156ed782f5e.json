{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/father-project/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllCommrnts } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllCommrnts);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: useParams.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"UhutHWblW7V3IC7CYBhRN+7PvgE=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/father-project/src/components/comments/Comments.js"],"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","getAllCommrnts","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMY,MAAM,GAAIV,SAAS,EAAzB;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAcD,MAApB;AAGA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC;AAA5B,MAA8CZ,OAAO,CAACC,cAAD,CAA3D;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,EAAUC,WAAV,CAFM,CAAT;;AAIA,QAAMI,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAKA,QAAMQ,mBAAmB,GAAG,MAAM,CAAE,CAApC;;AACA,MAAIC,QAAJ;;AACA,MAAGL,MAAM,KAAK,SAAd,EAAyB;AACvBK,IAAAA,QAAQ,gBACN;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAGL,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACI,MAAf,GAAwB,CAAvE,EAA0E;AACxED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAGH;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACD,MAAGF,MAAM,KAAK,WAAX,KAA2B,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,KAA0B,CAAxE,CAAH,EAA+E;AAC7ED,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBACd,QAAC,cAAD;AACC,MAAA,OAAO,EAAER,SAAS,CAACW,OADpB;AAEC,MAAA,cAAc,EAAEM;AAFjB;AAAA;AAAA;AAAA;AAAA,YARJ,EAYGC,QAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnDD;;GAAMX,Q;UAEYP,S,EAKoCG,O;;;KAPhDI,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllCommrnts } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params =  useParams();\n\n  const { quoteId } = params\n\n\n  const {sendRequest, status, data: loadedComments} = useHttp(getAllCommrnts);\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n\n  const addedCommentHandler = () => {};\n  let comments;\n  if(status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if(status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments= {loadedComments}/>\n  }\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment &&( \n        <NewCommentForm\n         quoteId={useParams.quoteId}\n         onAddedComment={addedCommentHandler}\n         />)}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}